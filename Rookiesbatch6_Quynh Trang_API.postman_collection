{
	"info": {
		"_postman_id": "fa84be3e-f63e-4775-8ac4-48fb0fe7229c",
		"name": "API Training",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22892769"
	},
	"item": [
		{
			"name": "4. GET /todo (404) not plural",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('4. Status code is 404 Not Found', function() {\r",
							"    pm.response.to.have.status(404)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todo",
					"host": [
						"{{url}}"
					],
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. GET /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('5.1. Status code is 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todos/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. GET /todos/{id} (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('6. Status code is 404 Not Found', function() {\r",
							"    pm.response.to.have.status(404)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/todos/308",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"308"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. HEAD /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('7. Status code is 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "HEAD",
				"header": [],
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "8. POST /todos (201)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('8.1.Status code is 201 Created', function() {\r",
							"    pm.response.to.have.status(201)\r",
							"});\r",
							"\r",
							"pm.test('8.2. Successfully create a todo', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect('Charles').to.eq(response.title)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Charles\",\r\n    \"doneStatus\": true,\r\n    \"description\": \"hellooooo\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		},
		{
			"name": "9. GET /todos (200) ?filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('9.1. Status code is 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('9.2. Returns todos completed', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect(true).to.eq(response.todos[0].doneStatus)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/todos?doneStatus=true",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "10. POST /todos (400) doneStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('10.1. Status code is 400 Bad Request', function() {\r",
							"    pm.response.to.have.status(400)\r",
							"});\r",
							"\r",
							"pm.test('10.2. Returns an error message', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect('Failed Validation: doneStatus should be BOOLEAN').to.eq(response.errorMessages[0])\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Charles\",\r\n    \"doneStatus\": 308,\r\n    \"description\": \"hellooooo\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/todos?doneStatus=false",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					],
					"query": [
						{
							"key": "doneStatus",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "11. POST /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('11.1. Check status code: 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});\r",
							"\r",
							"pm.test('11.2. Successfully update a todo', function() {\r",
							"\tvar response = JSON.parse(responseBody);\r",
							"\tpm.expect('Fred').to.eq(response.title)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Fred\",\r\n    \"doneStatus\": false,\r\n    \"description\": \"hiii\"\r\n}"
				},
				"url": {
					"raw": "{{url}}/todos/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "12. DELETE /todos/{id} (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('12. Status code is 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/todos/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "13. OPTIONS /todos (200)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('13. Status code is 200 OK', function() {\r",
							"    pm.response.to.have.status(200)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/todos",
					"host": [
						"{{url}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": []
		}
	]
}